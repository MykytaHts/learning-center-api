name: Build and Deploy to Cloud Run

on:
  workflow_dispatch:
  push:
    branches: [ "main", "bucket-impl" ]

env:
  PROJECT_ID: decisive-unison-430919-k4
  GAR_LOCATION: europe-central2
  SERVICE: learning-center-api
  REPOSITORY: learning-center-repository
  REGION: europe-central2

jobs:
  deploy:
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Java environment
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v1'
        with:
          token_format: 'access_token'
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v1'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'

      - name: Build and Push Container
        run: |-
          ./mvnw compile jib:build \
          -Dmaven.compiler.release=17 \
          -Djib.to.image="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}"
      - name: Deploy to Cloud Run
        id: deploy
        run: |-
          gcloud run deploy ${{ env.SERVICE }} \
          --image ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }} \
          --quiet \
          --platform managed \
          --region ${{ env.REGION }} \
          --project ${{ env.PROJECT_ID }} \
          --format json \
          --update-env-vars SERVICE_NAME="Learning center" \
          --update-secrets DB_DATABASE_NAME=DB_DATABASE_NAME:latest \
          --update-secrets DB_USERNAME=DB_USERNAME:1 \
          --update-secrets DB_PASSWORD=DB_PASSWORD:1 \
          --update-secrets DB_CLOUD_SQL_INSTANCE=DB_CLOUD_SQL_INSTANCE:1 \
          --allow-unauthenticated
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}